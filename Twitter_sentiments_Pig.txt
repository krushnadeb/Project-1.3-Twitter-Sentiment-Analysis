


REGISTER '/home/acadgild/KrushnaDebashram/TwitterData_jar/elephant-bird-hadoop-compat-4.1.jar';
REGISTER '/home/acadgild/KrushnaDebashram/TwitterData_jar/elephant-bird-pig-4.1.jar';
REGISTER '/home/acadgild/KrushnaDebashram/TwitterData_jar/json-simple-1.1.1.jar';




load_tweets = LOAD '/user/flume_krushnadebashram/tweets/F*' USING com.twitter.elephantbird.pig.load.JsonLoader('-nestedLoad') AS myMap;
extract_details = FOREACH load_tweets GENERATE myMap#'id' as id,myMap#'text' as text;
tokens = foreach extract_details generate id,text, FLATTEN(TOKENIZE(text)) As word;
dictionary = load '/user/acadgild/AFINN.txt' using PigStorage('\t') AS(word:chararray,rating:int);
dump dictionary;
word_rating = join tokens by word left outer, dictionary by word using 'replicated';
describe word_rating;

rating = foreach word_rating generate tokens::id as id,tokens::text as text, dictionary::rating as rate;
word_group = group rating by (id,text);
avg_rate = foreach word_group generate group, AVG(rating.rate) as tweet_rating;
dump avg_rate;

positive_tweets = filter avg_rate by tweet_rating>=0;dump positive_tweets;


